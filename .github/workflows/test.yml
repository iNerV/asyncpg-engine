name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  POETRY_VERSION: 1.1.11

jobs:

  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

    - uses: actions/cache@v2
      with:
        path: .venv
        key: ${{ github.ref }}-${{ github.workflow }}-${{ runner.os }}-${{ github.job }}-${{ hashFiles('poetry.lock') }}
        restore-keys: refs/heads/master-${{ github.workflow }}-${{ runner.os }}-${{ github.job }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: poetry install

    - name: Lint
      run: |
        poetry run flake8
        poetry run mypy ./

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

    - uses: actions/cache@v2
      with:
        path: .venv
        key: ${{ github.ref }}-${{ github.workflow }}-${{ runner.os }}-${{ github.job }}-${{ hashFiles('poetry.lock') }}
        restore-keys: refs/heads/master-${{ github.workflow }}-${{ runner.os }}-${{ github.job }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: poetry install

    - name: Test
      run: poetry run pytest
